---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Welcome to Astro.">
    <main class="grid content-center text-center gap-1">
        <p class="text-center text-sm font-light">Gunakan tanda pisah (-) untuk memisahkan antar-triplet!</p>
        <form class="grid place-items-center">
            <label for="sense">Sense</label>
            <input type="text" name="sense" id="sense" oninput="this.value = this.value.toUpperCase()">
            <label for="antisense">Anti-sense</label>
            <input type="text" name="antisense" id="antisense" oninput="this.value = this.value.toUpperCase()">
            <label for="kodon">Kodon</label>
            <input type="text" name="kodon" id="kodon" oninput="this.value = this.value.toUpperCase()">
            <label for="antikodon">Anti-kodon</label>
            <input type="text" name="antikodon" id="antikodon" oninput="this.value = this.value.toUpperCase()">
        </form>
        <p>Asam Amino</p>
        <div id="asamamino">
        </div>
    </main>
    <script>
        const form = document.querySelector('form')

        const sense = form.sense
        const antisense = form.antisense
        const kodon = form.kodon
        const antikodon = form.antikodon

        const asamamino = document.getElementById('asamamino')

        form.addEventListener('input', (e) => {
            let target = e.target

            if (target == sense) {
                antisense.value = Array.from(sense.value).map(e => {
                    switch (e) {
                        case 'A':
                            return 'T'
                            break;
                        case 'T':
                            return 'A'
                            break;
                        case 'G':
                            return 'C'
                            break;
                        case 'C':
                            return 'G'
                            break;
                        case '-':
                            return '-'
                            break;
                        default:
                            return alert('Sense hanya terdiri dari TCAG (Huruf Balok)')
                    }
                }).join('')

                kodon.value = Array.from(sense.value).map(e => {
                    switch (e) {
                        case 'T':
                            return 'U'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')

                antikodon.value = Array.from(antisense.value).map(e => {
                    switch (e) {
                        case 'T':
                            return 'U'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')
            } else if (target == antisense) {
                sense.value = Array.from(antisense.value).map(e => {
                    switch (e) {
                        case 'A':
                            return 'T'
                            break;
                        case 'T':
                            return 'A'
                            break;
                        case 'G':
                            return 'C'
                            break;
                        case 'C':
                            return 'G'
                            break;
                        case '-':
                            return '-'
                            break;
                        default:
                            return alert('Anti-sense hanya terdiri dari TCAG (Huruf Balok)')
                    }
                }).join('')

                kodon.value = Array.from(sense.value).map(e => {
                    switch (e) {
                        case 'T':
                            return 'U'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')

                antikodon.value = Array.from(antisense.value).map(e => {
                    switch (e) {
                        case 'T':
                            return 'U'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')
            } else if (target == kodon) {
                antikodon.value = Array.from(kodon.value).map(e => {
                    switch (e) {
                        case 'A':
                            return 'U'
                            break;
                        case 'U':
                            return 'A'
                            break;
                        case 'G':
                            return 'C'
                            break;
                        case 'C':
                            return 'G'
                            break;
                        case '-':
                            return '-'
                            break;
                        default:
                            return alert('Kodon hanya terdiri dari UCAG (Huruf Balok)')
                    }
                }).join('')
                
                sense.value = Array.from(kodon.value).map(e => {
                    switch (e) {
                        case 'U':
                            return 'T'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')

                antisense.value = Array.from(antikodon.value).map(e => {
                    switch (e) {
                        case 'U':
                            return 'T'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')
            } else if (target = antikodon) {
                kodon.value = Array.from(antikodon.value).map(e => {
                    switch (e) {
                        case 'A':
                            return 'U'
                            break;
                        case 'U':
                            return 'A'
                            break;
                        case 'G':
                            return 'C'
                            break;
                        case 'C':
                            return 'G'
                            break;
                        case '-':
                            return '-'
                            break;
                        default:
                            return alert('Anti-kodon hanya terdiri dari UCAG (Huruf Balok)')
                    }
                }).join('')
                
                sense.value = Array.from(kodon.value).map(e => {
                    switch (e) {
                        case 'U':
                            return 'T'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')

                antisense.value = Array.from(antikodon.value).map(e => {
                    switch (e) {
                        case 'U':
                            return 'T'
                            break;
                        case '-':
                            return '-'
                            break;
                        case 'A':
                        case 'G':
                        case 'C':
                            return e
                        default:
                            return
                    }
                }).join('')
            }

            asamamino.innerText = kodon.value.split('-').map(e => {
                switch (e) {
                    case 'UUU':
                    case 'UUC':
                        return e + ': Fenilalanin'
                        break;
                    case 'UUA':
                    case 'UUG':
                        return e + ': Leusin'
                        break;
                    case 'UCU':
                    case 'UCC':
                    case 'UCA':
                    case 'UCG':
                        return e + ': Serin'
                        break;
                    case 'UAU':
                    case 'UAC':
                        return e + ': Tirosin'
                        break;
                    case 'UGU':
                    case 'UGC':
                        return e + ': Sistein'
                        break;
                    case 'UGG':
                        return e + ': Triptopan'
                        break;
                    case 'CUU':
                    case 'CUC':
                    case 'CUA':
                    case 'CUG':
                        return e + ': Leusin'
                        break;
                    case 'CCU':
                    case 'CCC':
                    case 'CCA':
                    case 'CCG':
                        return e + ': Prolin'
                        break;
                    case 'CAU':
                    case 'CAC':
                        return e + ': Histidin'
                        break;
                    case 'CAA':
                    case 'CAG':
                        return e + ': Glutamin'
                        break;
                    case 'CGU':
                    case 'CGC':
                    case 'CGA':
                    case 'CGG':
                        return e + ': Arginin'
                        break;
                    case 'AUU':
                    case 'AUA':
                    case 'AUC':
                        return e + ': Isoleusin'
                        break;
                    case 'AUG':
                        return e + ': Metionin (Start)'
                        break;
                    case 'ACU':
                    case 'ACC':
                    case 'ACA':
                    case 'ACG':
                        return e + ': Treonin'
                        break;
                    case 'AAU':
                    case 'AAC':
                        return e + ': Asparagin'
                        break;
                    case 'AAA':
                    case 'AAG':
                        return e + ': Lisin'
                        break;
                    case 'AGU':
                    case 'AGC':
                        return e + ': Serin'
                        break;
                    case 'AGA':
                    case 'AGG':
                        return e + ': Arginin'
                        break;
                    case 'GUU':
                    case 'GUC':
                    case 'GUA':
                    case 'GUG':
                        return e + ': Valin'
                        break;
                    case 'GCU':
                    case 'GCC':
                    case 'GCA':
                    case 'GCG':
                        return e + ': Alanin'
                        break;
                    case 'GAU':
                    case 'GAC':
                        return e + ': Aspartat'
                        break;
                    case 'GAA':
                    case 'GAG':
                        return e + ': Glutamat'
                        break;
                    case 'GGU':
                    case 'GGC':
                    case 'GGA':
                    case 'GGG':
                        return e + ': Glisin'
                        break;
                    case 'UAA':
                    case 'UAG':
                    case 'UGA':
                        return e + ' (Stop)'
                        break;
                    default:
                        return e + '?'
                }
            }).join('\n')
        })
    </script>
</Layout>